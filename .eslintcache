[{"D:\\integrify\\src\\reportWebVitals.js":"1","D:\\integrify\\src\\App.js":"2","D:\\integrify\\src\\components\\home\\home.js":"3","D:\\integrify\\src\\components\\card\\card.js":"4","D:\\integrify\\src\\components\\user-info\\user-info.js":"5","D:\\integrify\\src\\index.js":"6","D:\\integrify\\src\\StateProvider.js":"7","D:\\integrify\\src\\reducer.js":"8"},{"size":362,"mtime":1607512228761,"results":"9","hashOfConfig":"10"},{"size":456,"mtime":1607519550189,"results":"11","hashOfConfig":"10"},{"size":668,"mtime":1607606315132,"results":"12","hashOfConfig":"10"},{"size":2791,"mtime":1607605224461,"results":"13","hashOfConfig":"10"},{"size":4153,"mtime":1607637239994,"results":"14","hashOfConfig":"10"},{"size":690,"mtime":1607598115961,"results":"15","hashOfConfig":"10"},{"size":532,"mtime":1607597584772,"results":"16","hashOfConfig":"10"},{"size":283,"mtime":1607632740814,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zxha5s",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\integrify\\src\\reportWebVitals.js",[],"D:\\integrify\\src\\App.js",[],"D:\\integrify\\src\\components\\home\\home.js",[],"D:\\integrify\\src\\components\\card\\card.js",["35","36","37"],"import React, { useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Avatar from '@material-ui/core/Avatar';\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport { Link } from 'react-router-dom';\n\nimport './card.css';\nimport { useStateValue } from '../../StateProvider';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 50,\n    width: '90%',\n    height: '100%',\n  },\n  orange: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n    height: 70,\n    width: 70,\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n    height: 70,\n    width: 70,\n  },\n  pos: {\n    marginBottom: 10,\n    fontSize: 12,\n    fontWeight: 800,\n    fontStyle: 'italic',\n  },\n  pos1: {\n    marginBottom: 10,\n    fontSize: 12,\n  },\n  pos2: {\n    fontWeight: 600,\n  },\n  btn: {\n    color: '#ddd',\n    fontWeight: 600,\n  },\n}));\n\nconst MyCard = (props) => {\n  const classes = useStyles();\n  const [user, setUser] = useState(props.data);\n\n  const [{ userData }, dispatch] = useStateValue();\n\n  const addUserData = () => {\n    dispatch({\n      type: 'ADD_USER_INFO',\n      userInfo: {\n        id: user.id,\n        name: user.name,\n        username: user.username,\n        phone: user.phone,\n        website: user.website,\n        email: user.email,\n        address: user.address,\n        company: user.company,\n      },\n    });\n  };\n\n  return (\n    <Card className={classes.root} variant='elevation'>\n      <CardContent>\n        <div className='card card__avatar'>\n          <Avatar className={classes.purple} alt={user.name} />\n        </div>\n        <div className='card card__name'>\n          <Typography className={classes.pos2}>{user.name}</Typography>\n        </div>\n        <div className='card card__userName'>\n          <Typography className={classes.pos} color='textSecondary'>\n            {`@${user.name}`}\n          </Typography>\n        </div>\n        <div className='card card__website'>\n          <Typography className={classes.pos1} color='textSecondary'>\n            <a href='#'>{`http://${user.website}`}</a>\n          </Typography>\n        </div>\n      </CardContent>\n      <Link to={`/user/${user.id}`}>\n        <CardActions className='card card__button'>\n          <Button className={classes.btn} size='large' onClick={addUserData}>\n            MORE DETAILS\n          </Button>\n        </CardActions>\n      </Link>\n    </Card>\n  );\n};\n\nexport default MyCard;\n","D:\\integrify\\src\\components\\user-info\\user-info.js",["38"],"D:\\integrify\\src\\index.js",[],"D:\\integrify\\src\\StateProvider.js",[],"D:\\integrify\\src\\reducer.js",[],{"ruleId":"39","severity":1,"message":"40","line":56,"column":16,"nodeType":"41","messageId":"42","endLine":56,"endColumn":23},{"ruleId":"39","severity":1,"message":"43","line":58,"column":12,"nodeType":"41","messageId":"42","endLine":58,"endColumn":20},{"ruleId":"44","severity":1,"message":"45","line":92,"column":13,"nodeType":"46","endLine":92,"endColumn":25},{"ruleId":"47","severity":1,"message":"48","line":64,"column":6,"nodeType":"49","endLine":64,"endColumn":8,"suggestions":"50"},"no-unused-vars","'setUser' is assigned a value but never used.","Identifier","unusedVar","'userData' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'userData.length'. Either include them or remove the dependency array.","ArrayExpression",["51"],{"desc":"52","fix":"53"},"Update the dependencies array to be: [id, userData.length]",{"range":"54","text":"55"},[1689,1691],"[id, userData.length]"]