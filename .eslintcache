[{"D:\\integrify\\src\\reportWebVitals.js":"1","D:\\integrify\\src\\App.js":"2","D:\\integrify\\src\\components\\home\\home.js":"3","D:\\integrify\\src\\components\\card\\card.js":"4","D:\\integrify\\src\\components\\user-info\\user-info.js":"5","D:\\integrify\\src\\index.js":"6","D:\\integrify\\src\\StateProvider.js":"7","D:\\integrify\\src\\reducer.js":"8"},{"size":362,"mtime":1607512228761,"results":"9","hashOfConfig":"10"},{"size":456,"mtime":1607519550189,"results":"11","hashOfConfig":"10"},{"size":668,"mtime":1607606315132,"results":"12","hashOfConfig":"10"},{"size":2791,"mtime":1607605224461,"results":"13","hashOfConfig":"10"},{"size":3142,"mtime":1607606049516,"results":"14","hashOfConfig":"10"},{"size":690,"mtime":1607598115961,"results":"15","hashOfConfig":"10"},{"size":532,"mtime":1607597584772,"results":"16","hashOfConfig":"10"},{"size":306,"mtime":1607599252310,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zxha5s",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\integrify\\src\\reportWebVitals.js",[],"D:\\integrify\\src\\App.js",[],"D:\\integrify\\src\\components\\home\\home.js",[],"D:\\integrify\\src\\components\\card\\card.js",["36","37","38"],"import React, { useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Avatar from '@material-ui/core/Avatar';\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport { Link } from 'react-router-dom';\n\nimport './card.css';\nimport { useStateValue } from '../../StateProvider';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 50,\n    width: '90%',\n    height: '100%',\n  },\n  orange: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n    height: 70,\n    width: 70,\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n    height: 70,\n    width: 70,\n  },\n  pos: {\n    marginBottom: 10,\n    fontSize: 12,\n    fontWeight: 800,\n    fontStyle: 'italic',\n  },\n  pos1: {\n    marginBottom: 10,\n    fontSize: 12,\n  },\n  pos2: {\n    fontWeight: 600,\n  },\n  btn: {\n    color: '#ddd',\n    fontWeight: 600,\n  },\n}));\n\nconst MyCard = (props) => {\n  const classes = useStyles();\n  const [user, setUser] = useState(props.data);\n\n  const [{ userData }, dispatch] = useStateValue();\n\n  const addUserData = () => {\n    dispatch({\n      type: 'ADD_USER_INFO',\n      userInfo: {\n        id: user.id,\n        name: user.name,\n        username: user.username,\n        phone: user.phone,\n        website: user.website,\n        email: user.email,\n        address: user.address,\n        company: user.company,\n      },\n    });\n  };\n\n  return (\n    <Card className={classes.root} variant='elevation'>\n      <CardContent>\n        <div className='card card__avatar'>\n          <Avatar className={classes.purple} alt={user.name} />\n        </div>\n        <div className='card card__name'>\n          <Typography className={classes.pos2}>{user.name}</Typography>\n        </div>\n        <div className='card card__userName'>\n          <Typography className={classes.pos} color='textSecondary'>\n            {`@${user.name}`}\n          </Typography>\n        </div>\n        <div className='card card__website'>\n          <Typography className={classes.pos1} color='textSecondary'>\n            <a href='#'>{`http://${user.website}`}</a>\n          </Typography>\n        </div>\n      </CardContent>\n      <Link to={`/user/${user.id}`}>\n        <CardActions className='card card__button'>\n          <Button className={classes.btn} size='large' onClick={addUserData}>\n            MORE DETAILS\n          </Button>\n        </CardActions>\n      </Link>\n    </Card>\n  );\n};\n\nexport default MyCard;\n","D:\\integrify\\src\\components\\user-info\\user-info.js",["39","40","41","42"],"import React, { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport './user-info.css';\nimport { useStateValue } from '../../StateProvider';\n\nconst UserInfo = () => {\n  let { id } = useParams();\n  let history = useHistory();\n\n  const [{ userData }, dispatch] = useStateValue();\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    setData(userData[0]);\n  }, []);\n\n  const handleClick = () => {\n    history.push('/');\n  };\n\n  console.log(userData);\n\n  // After 10 sec and still can not get the data, push the use back to home\n  useEffect(() => {\n    console.log('lala');\n    setTimeout(() => {\n      if (!userData.length) {\n        history.push('/');\n      } else {\n        return;\n      }\n    }, 10000);\n  }, [data]);\n\n  return (\n    <div className='userInfo__container'>\n      <div className='userInfo__wrapper'>\n        <div className='userInfo__title'>\n          <h1>User Detail Page</h1>\n        </div>\n        {data ? (\n          <div className='userInfo__content'>\n            <div className='userInfo__info'>\n              <h3>Name: {data.name}</h3>\n            </div>\n            <div className='userInfo__info'>\n              <h3>Username: {data.username}</h3>\n            </div>\n            <div className='userInfo__info'>\n              <h3>Email: {data.email}</h3>\n            </div>\n            <div className='userInfo__info'>\n              <h3>Phone: {data.phone}</h3>\n            </div>\n            <div className='userInfo__info'>\n              <h3>Website: {data.website}</h3>\n            </div>\n            <div className='userInfo__info'>\n              <h3>\n                Company:\n                <ul>\n                  <li>Name: {data.company.name}</li>\n                  <li>Catch phase: {data.company.catchPhrase}</li>\n                  <li>BS: {data.company.bs}</li>\n                </ul>\n              </h3>\n            </div>\n            <div className='userInfo__info'>\n              <h3>\n                Address:\n                <ul>\n                  <li>Street: {data.address.street}</li>\n                  <li>Suite: {data.address.suite}</li>\n                  <li>City: {data.address.city}</li>\n                  <li>Zipcode: {data.address.zipcode}</li>\n                  <li>Geo Lat: {data.address.geo.lat}</li>\n                  <li>Geo LNG: {data.address.geo.lng}</li>\n                </ul>\n              </h3>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <Skeleton variant='text' width={150} />\n            <Skeleton variant='rect' height={100} />\n            <Skeleton variant='text' width={150} />\n            <Skeleton variant='rect' height={100} />\n            <Skeleton variant='text' width={150} />\n            <Skeleton variant='rect' height={100} />\n          </div>\n        )}\n      </div>\n      <Button\n        variant='contained'\n        className='userInfo__btn'\n        color='primary'\n        onClick={handleClick}\n      >\n        Back\n      </Button>\n    </div>\n  );\n};\n\nexport default UserInfo;\n","D:\\integrify\\src\\index.js",[],"D:\\integrify\\src\\StateProvider.js",[],"D:\\integrify\\src\\reducer.js",[],{"ruleId":"43","severity":1,"message":"44","line":56,"column":16,"nodeType":"45","messageId":"46","endLine":56,"endColumn":23},{"ruleId":"43","severity":1,"message":"47","line":58,"column":12,"nodeType":"45","messageId":"46","endLine":58,"endColumn":20},{"ruleId":"48","severity":1,"message":"49","line":92,"column":13,"nodeType":"50","endLine":92,"endColumn":25},{"ruleId":"43","severity":1,"message":"51","line":10,"column":9,"nodeType":"45","messageId":"46","endLine":10,"endColumn":11},{"ruleId":"43","severity":1,"message":"52","line":13,"column":24,"nodeType":"45","messageId":"46","endLine":13,"endColumn":32},{"ruleId":"53","severity":1,"message":"54","line":18,"column":6,"nodeType":"55","endLine":18,"endColumn":8,"suggestions":"56"},{"ruleId":"53","severity":1,"message":"57","line":36,"column":6,"nodeType":"55","endLine":36,"endColumn":12,"suggestions":"58"},"no-unused-vars","'setUser' is assigned a value but never used.","Identifier","unusedVar","'userData' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'id' is assigned a value but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userData'. Either include it or remove the dependency array.","ArrayExpression",["59"],"React Hook useEffect has missing dependencies: 'history' and 'userData.length'. Either include them or remove the dependency array.",["60"],{"desc":"61","fix":"62"},{"desc":"63","fix":"64"},"Update the dependencies array to be: [userData]",{"range":"65","text":"66"},"Update the dependencies array to be: [data, history, userData.length]",{"range":"67","text":"68"},[518,520],"[userData]",[869,875],"[data, history, userData.length]"]